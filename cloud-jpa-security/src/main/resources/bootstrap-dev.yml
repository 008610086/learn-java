isDebug: true
dadaBaseUrl: localhost
dataBaseParam: 'useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai&zeroDateTimeBehavior=convertToNull&allowPublicKeyRetrieval=true'

spring:
  redis:
    host: localhost
    port: 6379
    database: 0
    jedis:
      pool:
        max-active: 10
  datasource:
    driverClassName: ${dataBaseDriveV8} #数据库驱动
    url: jdbc:mysql://${dadaBaseUrl}:3306/learn?useSSL=false&${dataBaseParam} #数据库地址
    username: root #数据库用户名
    password: root #数据库密码
    type: com.alibaba.druid.pool.DruidDataSource # 主数据源，默认的
    # 下面为连接池的补充设置，应用到上面所有数据源中
    initialSize: 5 # 初始化大小，最小，最大
    minIdle: 5 # 最小，最大
    maxActive: 20 # 最大
    maxWait: 60000 # 配置获取连接等待超时的时间
    timeBetweenEvictionRunsMillis: 60000  # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    minEvictableIdleTimeMillis: 300000 # 配置一个连接在池中最小生存的时间，单位是毫秒
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true # 打开PSCache，并且指定每个连接上PSCache的大小
    maxPoolPreparedStatementPerConnectionSize: 25
    filters: stat,wall,logback # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500 # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    useGlobalDataSourceStat: true # 合并多个DruidDataSource的监控数据

  #    dbcp2:
  #      driver-class-name: ${dataBaseDriveV8}
  #      url: jdbc:mysql://${dadaBaseUrl}:3306/learn?useSSL=false&${dataBaseParam} #数据库地址
  #      username: learn #数据库用户名
  #      password: learn #数据库密码
  ##      max-conn-lifetime-millis: 10
  ##      validation-query-timeout: 1
  #      initial-size: 20
  #      max-idle: 50
  #      min-idle: 20
  #      max-wait-millis: 10
  #      max-total: 90
  #      remove-abandoned-timeout: 2
  #      test-on-borrow: true
  #      validation-query: SELECT 1


#      type: com.alibaba.druid.pool.DruidDataSource
#      driverClassName: com.mysql.jdbc.Driver


