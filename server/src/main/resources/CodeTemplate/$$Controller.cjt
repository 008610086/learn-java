package [(${basePackage})].custom.[(${packageName})].controller;

import lombok.extern.slf4j.Slf4j;
import [(${basePackage})].common.base.ResponseDTO;
import [(${basePackage})].common.jwt.JwtIgnore;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import lombok.extern.slf4j.Slf4j;
import org.springframework.web.bind.annotation.*;
import [(${basePackage})].custom.[(${packageName})].service.[(${moduleName})]Service;
import [(${basePackage})].custom.[(${packageName})].entity.[(${moduleName})];


import java.util.List;

@RestController
@RequestMapping(value = "/api/[(${url})]")
@Slf4j
public class [(${moduleName})]Controller {
    private final [(${moduleName})]Service service;

    public [(${moduleName})]Controller([(${moduleName})]Service service) {
        this.service = service;
    }

      @GetMapping("/page")
        public ResponseDTO<Page<[(${moduleName})]>> page([(${moduleName})] entity,
                                            @RequestParam(value = "pageIndex", defaultValue = "1") Integer pageIndex,
                                            @RequestParam(value = "pageSize", defaultValue = "10") Integer pageSize) {
            log.info("收到请求->获取[(${moduleName})]分页");
            Page<[(${moduleName})]> data = service.page(pageIndex, pageSize, entity);
            log.info("返回结果->获取[(${moduleName})]分页完成:[{}]", data);
            return new ResponseDTO<>(data);
        }

    @RequestMapping("/list")
    public ResponseDTO<List<[(${moduleName})]>> list([(${moduleName})] entity) {
        List<[(${moduleName})]> list = service.list(entity);
        return new ResponseDTO<>(list);
    }

    @PostMapping("/save")
    public ResponseDTO<Boolean> save(@RequestBody [(${moduleName})] entity) {
        log.info("收到请求->保存[(${moduleName})]");
        boolean status = service.save(entity);
        log.info("返回结果->保存[(${moduleName})]完成:[{}]", status);
        return new ResponseDTO<>(status);
    }

    @GetMapping("/get/{id}")
    public ResponseDTO<[(${moduleName})]> info(@PathVariable String id) {
        log.info("收到请求->获取[(${moduleName})]详情");
        [(${moduleName})] data = service.getById(id);
        log.info("返回结果->获取[(${moduleName})]详情完成:[{}]", data);
        return new ResponseDTO<>(data);
    }

    @DeleteMapping("/remove/{id}")
    public ResponseDTO<Boolean> remove(@PathVariable String id) {
        log.info("收到请求->删除[(${moduleName})]");
        boolean status = service.remove(id);
        log.info("返回结果->删除[(${moduleName})]完成:[{}]", status);
        return new ResponseDTO<>(status);
    }
}
